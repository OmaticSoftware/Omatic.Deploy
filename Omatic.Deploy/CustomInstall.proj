<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="DefaultTarget">
  <!-- 
  TODO: Restore, revisions, SQL scripts
  -->

  <!-- IMPORTS -->
  <PropertyGroup>
    <LocalConfig Condition="'$(LocalConfig)' == ''">LocalConfig.xml</LocalConfig>
  </PropertyGroup>

  <Import Project="$(MSBuildProjectDirectory)\Config.xml" />
  <!-- Import the standard BB CRM project file.  Note this will also import PlatformOptions.xml and ProductOptions.xml -->
  <Import Project="$(MSBuildProjectDirectory)\..\BlackbaudPlatform.xml" />
  <Import Condition="Exists('$(LocalConfig)')" Project="$(LocalConfig)"/>

  <!-- CUSTOM TASKS -->
  <UsingTask AssemblyFile="$(MSBuildProjectDirectory)\Tasks\Custom\Omatic.Deploy.dll" TaskName="LoadCatalogItems" />
  <UsingTask AssemblyFile="$(MSBuildProjectDirectory)\Tasks\Custom\Omatic.Deploy.dll" TaskName="CheckDbRevKey" />
  <UsingTask AssemblyFile="$(MSBuildProjectDirectory)\Tasks\MSBuildExtensionPack\MSBuild.ExtensionPack.dll" TaskName="MSBuild.ExtensionPack.SqlServer.SqlExecute" />

  <!-- Targets -->
  <Target Name="Install" DependsOnTargets="LoadCustomizations;LoadSystemRoles;ExecuteSQL" />
  <Target Name="InstallWithRestore" DependsOnTargets="RestoreDB;ConfigureDB;CustomConfigureReportServer;Install" />


  <Target Name="RestoreDB">
    <MSBuild.ExtensionPack.SqlServer.SqlExecute
         Condition="'$(OverwriteDB)' == 'True'"
         TaskAction="Execute"
         ConnectionString="$(Platform_SQLServerConnectNoDB)"
         Sql="IF DB_ID (N'$(Platform_SQLServerDatabaseName)') IS NOT NULL
			BEGIN
				ALTER DATABASE [$(Platform_SQLServerDatabaseName)] SET SINGLE_USER WITH ROLLBACK IMMEDIATE
        DROP DATABASE [$(Platform_SQLServerDatabaseName)]
      END"
         CommandTimeout="900"
        />

    <!-- Restore the DB -->
    <RestoreDB DatabaseName="$(Platform_SQLServerDatabaseName)"
               BackupFile="$(Platform_TemplateDBPath)"
               DataPath="$(Platform_SQLServerDataPath)"
               LogPath="$(Platform_SQLServerLogPath)"
               ConnectString="$(Platform_SQLServerConnectNoDB)"
               OverWriteExistingDB="false"
               />

    <!-- Set up master key, change DB owner to 'sa' -->
    <Message Text="Re-encrypting DB master key (MSBuild logging temporarily suppressed)" />
    <MSBuild.ExtensionPack.SqlServer.SqlExecute
		SuppressTaskMessages="true"
		TaskAction="Execute"
		Sql="EXEC sp_changedbowner 'sa';
			OPEN MASTER KEY DECRYPTION BY PASSWORD = '$(DBMasterKeyPassword)';
			ALTER MASTER KEY DROP ENCRYPTION BY SERVICE MASTER KEY
			ALTER MASTER KEY ADD ENCRYPTION BY SERVICE MASTER KEY
			ALTER MASTER KEY REGENERATE WITH ENCRYPTION BY PASSWORD = '$(DBMasterKeyPassword)';
			CLOSE master KEY"
		ConnectionString="$(Platform_SQLServerConnect)" />
  </Target>


  <Target Name="ConfigureDB">
    <!-- Set recovery model -->
    <PropertyGroup>
      <RecoveryModel>SIMPLE</RecoveryModel>
      <RecoveryModel Condition="'$(UseFullRecoveryModel)' == 'true'">FULL</RecoveryModel>
    </PropertyGroup>
    <MSBuild.ExtensionPack.SqlServer.SqlExecute
      TaskAction="Execute"
      Sql="ALTER DATABASE [$(Platform_SQLServerDatabaseName)] SET RECOVERY $(RecoveryModel)"
      ConnectionString="$(Platform_SQLServerConnectNoDB)" />

    <!-- Drop existing users and groups -->
    <MSBuild.ExtensionPack.SqlServer.SqlExecute
      TaskAction="Execute"
	    UseTransaction="true"
      Sql="declare @MAXLOOP int = 50, @LOOPCOUNT int = 0, @SQL nvarchar(200);
while exists(select * from sys.database_principals where type = 'U' or type = 'G') and @LOOPCOUNT &lt; @MAXLOOP
begin 
	select top 1 @SQL = name from sys.database_principals where type = 'U' or type = 'G'
	set @SQL = 'DROP USER [' + @SQL + ']'
	EXECUTE sp_executesql @SQL
	set @LOOPCOUNT = @LOOPCOUNT + 1
end;"
      ConnectionString="$(Platform_SQLServerConnect)" />

    <!-- Add Database user -->
    <AddUsers ConnectString="$(Platform_SQLServerConnect)" Users="@(User)" />

    <!-- Run service revisions if necessary -->
    <CheckDbRevKey DeployPath="$(Platform_DeployPath)" SqlConnectString="$(Platform_SQLServerConnect)">
      <Output TaskParameter="DBRevisionsNeeded" PropertyName="RunRevisions" />
    </CheckDbRevKey>

    <RunServiceRevisions Condition="'$(RunRevisions)' == 'True'"
			SqlConnectString="$(Platform_SQLServerConnect)"
			CatalogAssembliesPath="$(Platform_DeployPath)\bin"
			SqlClrAssemblies="@(DatabaseAssemblies->'$(MSBuildProjectDirectory)\..\%(RelativeDir)%(Filename)%(Extension)')"
			RevisionsAssemblies="@(ServiceRevisions->'$(MSBuildProjectDirectory)\..\%(RelativeDir)%(Filename)%(Extension)')"
			ReportDeployUser="$(Platform_ReportServerDeployUser)"
			ReportDeployUserPassword="$(Platform_ReportServerDeployPassword)"
		/>

    <!-- Add currently executing user as an admin -->
    <AddApplicationUser ConnectString="$(Platform_SQLServerConnect)"
                        UserName="$(USERDOMAIN)\$(USERNAME)"
                        IsSysAdmin="true" />
  </Target>


  <Target Name="CustomConfigureReportServer">
    <ConfigureReportServer
				ReportServiceURL="$(Platform_ReportServiceBaseURL)"
				ReportFolder="$(Platform_ReportServiceRootFolder)"
				DatabaseServer="$(Platform_ReportServiceSQLServer)"
				Database="$(Platform_ReportServiceDatabaseName)"
				CreateInternalUser="false"
				ReportServiceHost="$(Platform_ReportServiceHost)"
				ReportServerUser="$(Platform_ReportServerUser)"
				ReportUserPassword="$(Platform_ReportServerPassword)"
        ReportRootFolders="@(ReportRootFolderItem)"
        DeleteRootFolderList="true"
        Timeout="300000"
		/>

    <Message Text="Resetting web app to clear cached settings" />
    <ResetWebApp MachineName="$(Platform_WebServer)"
      VirtualDirName="$(Platform_VirtualDirName)"
      RootSubPath="$(Platform_WebServerRootSubpath)"
		/>
  </Target>


  <Target Name="LoadCustomizations">
    <RunServiceRevisions SqlConnectString="$(Platform_SQLServerConnect)"
                         RevisionsAssemblies="@(PreRevisionAssembly)"
                         Condition="'@(PreRevisionAssembly)' != ''" />


    <LoadCatalogItems Condition="'@(CatalogItem)' != ''"
                      ItemsToLoad="@(CatalogItem)"
                      WebServiceDbName="$(Platform_SelectedDatabase)"
                      WebServiceUrl="$(Platform_WebServerURL)/appfxwebservice.asmx"
                      />

    <RunServiceRevisions SqlConnectString="$(Platform_SQLServerConnect)"
                         RevisionsAssemblies="@(PostRevisionAssembly)"
                         Condition="'@(PostRevisionAssembly)' != ''" />
  </Target>


  <Target Name="LoadSystemRoles">
    <ImportRoleTask Condition="'@(SystemRole)' != ''"
                WebServiceUrl="$(Platform_WebServerURL)/AppFxWebService.asmx"
                WebServiceDatabaseName="$(Platform_SelectedDatabase)"
                RoleDefinitionFiles="@(SystemRole)"/>

  </Target>


  <Target Name="ExecuteSQL">
    <!-- Execute some sql files -->
    <MSBuild.ExtensionPack.SqlServer.SqlExecute
      Condition="'@(SqlFile)' != ''"
      TaskAction="Execute"
      IgnoreScriptErrors="false"
      UseTransaction="true"
      Files="@(SqlFile)"
      ConnectionString="$(Platform_SQLServerConnect)" />

  </Target>

  <Target Name="DefaultTarget">
    <Message Text="OverwriteDB: $(OverwriteDB)" />
    <Message Text="Platform_TemplateDBPath: $(Platform_TemplateDBPath)" />
    <Message Text="Platform_SQLServerDatabaseName: $(Platform_SQLServerDatabaseName)" />
    <Message Text="Platform_SQLServerDataPath: $(Platform_SQLServerDataPath)" />
    <Message Text="Platform_SQLServerLogPath: $(Platform_SQLServerLogPath)" />
    <Message Text="UseFullRecoveryModel: $(UseFullRecoveryModel)" />

    <Message Text="" />
    <Message Text="" />
  </Target>


</Project>